name: Build and Push to Amazon ECR

on:
  push:
    branches:
      - main  # Change to your deployment branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com

      - name: Build Docker Image
        run: |
          REPOSITORY_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/${{ secrets.IMAGE_REPO_NAME }}
          IMAGE_TAG=$(git rev-parse --short HEAD)
          
          docker build -t $REPOSITORY_URI:$IMAGE_TAG .
          docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest

      - name: Push Docker Image
        run: |
          REPOSITORY_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/${{ secrets.IMAGE_REPO_NAME }}
          IMAGE_TAG=$(git rev-parse --short HEAD)

          docker push $REPOSITORY_URI:$IMAGE_TAG
          docker push $REPOSITORY_URI:latest

      - name: Generate Image Definitions File
        run: |
          REPOSITORY_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/${{ secrets.IMAGE_REPO_NAME }}
          IMAGE_TAG=$(git rev-parse --short HEAD)

          echo '[{"name":"${{ secrets.CONTAINER_NAME }}","imageUri":"'"$REPOSITORY_URI:$IMAGE_TAG"'"}]' > imageDefinitions.json

      - name: Upload Image Definitions Artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-definitions
          path: imageDefinitions.json
